$navigation-menu-width: 200px;
$navigation-padding-y: $xxxx-small-unit;
$navigation-padding-x: $xxx-small-unit;
$navigation-hover-bg: rgba($black, .05);
$navigation-selected-color: $primary-color;

// =========================================================================
// Navigation bar
// =========================================================================

.navigation__primary {
  @include media-query($breakpoint-header) {
    display: none;
  }
}

// =========================================================================
// First level
// =========================================================================

.navigation nav {
  > ul {
    display: flex;
    flex-wrap: wrap;
  }

  > ul > li {
    display: flex;
  }

  // Blockerising all link elements
  a, button {
    display: block;
    @include decorate-link(none, none);

    // Toggle elements need to push icons to the right and align center
    > span {
      display: flex;
    }

    > span > button,
    > span > .simple-navigation--icon {
      align-self: center;
    }
  }

  li {
    position: relative;
  }
}

.navigation {
  .level-1 > li > a,
  .level-1 > li > button,
  .priority-nav__dropdown-toggle {
    position: relative;
    padding: $navigation-padding-y $navigation-padding-x;
    // @include color-link($white, $white);
    // @include decorate-link(none, none);
    transition: .2s background;

    &:hover,
    [data-whatinput='keyboard'] &:focus {
      background-color: $navigation-hover-bg;
    }
  }

  // Colouring links and buttons when selected
  .level-1 > li.selected,
  .level-1 > li.selected > .simple-navigation--split-parent {
    > a,
    > button {
      @include color-link($navigation-selected-color, $navigation-selected-color);
    }
  }

  // Selected state bar at bottom of first level elements
  .level-1 > li.selected > a,
  .level-1 > li.selected > button,
  .level-1 > li.selected > .simple-navigation--split-parent {
    &::before {
      content: "";
      position: absolute;
      bottom: 0;
      left: $navigation-padding-x;
      right: $navigation-padding-x;
      height: 4px;
      background-color: $navigation-selected-color;
      z-index: 2;
    }
  }
}

// =========================================================================
// Parent link styling
// =========================================================================

.navigation .has-children {
  position: relative;

  button {
    position: relative;
  }

  svg {
    position: relative;
    width: 7px;
    height: 10px;
    transform: rotateZ(90deg);
    transition: transform .2s;
    margin-left: $xxxxx-small-unit;
  }

  button.active svg {
    transform: rotate(270deg);
  }
  
  .icon--fill {
    fill: $grey;
    transition: fill .2s;
  }

  button:hover .icon--fill,
  [data-whatinput='keyboard'] button:focus .icon--fill {
    fill: $link-hover-color;
  }
}

// =========================================================================
// Split-parent links
// =========================================================================

.simple-navigation--split-parent {
  display: flex;

  > a,
  > button {
    padding-top: $navigation-padding-y;
    padding-bottom: $navigation-padding-y;

    &:hover,
    [data-whatinput='keyboard'] &:focus {
      background-color: $navigation-hover-bg;
    }
  }

  > a {
    flex-grow: 1;
    flex-shrink: 1;
    padding-left: $navigation-padding-x;
    padding-right: $navigation-padding-x * .5;
  }

  .simple-navigation--nested & > button {
    width: auto;
  }

  > button {
    padding-left: $navigation-padding-x * .5;
    padding-right: $navigation-padding-x;
    position: relative;

    &::before {
      content: "";
      position: absolute;
      top: 50%;
      left: 0;
      margin-top: 1em * -.5;
      height: 1em;
      width: 1px;
      background: $divider-color;
    }

    .navigation .has-children & svg {
      margin-left: 0;
    }
  }
}

// =========================================================================
// Icon toggling
// =========================================================================

.simple-navigation--icon {
  .simple-navigation--icon--collapse {
    display: none;
  }
  
  .active > span > & {
    & > .simple-navigation--icon--expand {
      display: none;
    }
    & > .simple-navigation--icon--collapse {
      display: block;
    }
  } 
}

// =========================================================================
// Second level
// =========================================================================

.navigation nav > .nav__dropdown-wrapper > ul.nav__dropdown, /* Menu with more */
.navigation__simple ul ul,
.simple-navigation--nested,
.simple-navigation__without-toggles ul {
  display: none;
  position: absolute;
  background: $white;
  border: $divider;
  top: 100%;
  left: 0;
  width: $navigation-menu-width;
  z-index: 200;
  box-shadow: 0 10px 40px rgba($black, .2);

  li {
    position: relative;
  }

  li + li {
    border-top: $divider;
  }

  li > button, 
  li > a, 
  li > span {
    padding: $navigation-padding-y $navigation-padding-x;
  }

  // Second / third-level hover state
  li > button,
  li > a {
    &:hover,
    [data-whatinput='keyboard'] &:focus {
      background-color: $navigation-hover-bg;
    }
  }

  // Second / third-level active state
  li.selected,
  li.selected .simple-navigation--split-parent {
    > a,
    > button,
    > span {
      @include color-link($navigation-selected-color, $navigation-selected-color);
    }
  }

  // Fix buttons not full-width even with display block
  button {
    width: 100%;
  }

  // Arrow rotation and position
  .has-children {
    button {
      padding-right: $xx-small-unit;
    }

    svg {
      position: absolute;
      top: 50%;
      margin-top: -5px;
      right: $xxxxx-small-unit;
      transform: rotate(0deg);
    }
    button.active svg {
      transform: rotate(180deg);
    }
  }
}

// Ornament nav renderer without-toggles class allows hover
// to show subnavigation
.navigation__simple li,
.simple-navigation__without-toggles li {
  [data-whatinput='keyboard'] &:focus-within > ul,
  &:hover > ul {
    display: block;
  }
}

// Menu with more / last items should go to the left rather
// than right
li:last-child .simple-navigation--nested,
.navigation nav > .nav__dropdown-wrapper > ul.nav__dropdown {
  left: auto;
  right: 0;
}

// Hide nested elements by default
.simple-navigation__with-toggles .simple-navigation--nested {
  display: block;
  height: 0;
  padding: 0;
}

// navigation-simple hover states to show subnavigation
.navigation__simple li:hover ul {
  display: block;
}

// second / third level link colouring
.navigation nav > .nav__dropdown-wrapper ul a,
.navigation nav > ul ul a,
.navigation nav > ul ul button {
  // @include color-link($white, $white);
  // @include decorate-link(none, underline);
}

// =========================================================================
// Third level
// =========================================================================

// Push third level to the right
.navigation nav > .simple-navigation__with-toggles > li > .simple-navigation--nested .simple-navigation--nested,
.navigation nav > .simple-navigation__without-toggles > li > ul ul {
  top: 0;
  left: 100%;
}

// Push priority nav to the right
.nav__dropdown-wrapper > ul.nav__dropdown .simple-navigation--nested,
.nav__dropdown-wrapper > ul.nav__dropdown ul {
  top: 0;
  right: 100%;
  left: auto;
}

// =========================================================================
// Descriptions
// =========================================================================

.simple-navigation--item-description {
  display: block;
  color: $grey;
  font-size: $small-font-size;
}