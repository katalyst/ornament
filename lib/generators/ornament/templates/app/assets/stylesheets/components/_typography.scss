// =========================================================================
// Typography Settings
// =========================================================================

// Set to true if using merged font-family webfonts
// Set to false if using seperate webfonts for each weight/style. 
$font-families: true;
$system-fonts:  -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";

// =========================================================================
// Font declarations
// to be used with @include font
// eg. @include font($heading-alpha-font);
// =========================================================================

$body-font: ($system-fonts) normal normal;
$italic-font: ($system-fonts) italic normal;
$bold-font: ($system-fonts) normal bold;
$bold-italic-font: ($system-fonts) italic bold;
$heading-alpha-font: ($system-fonts) normal bold;
$heading-alpha-font-italic: ($system-fonts) italic bold;

@if not $font-families {
  $body-font: ('Myriad W01 Regular', sans-serif) normal normal;
  $italic-font: ('Myriad W01 It', sans-serif) normal normal;
  $bold-font: ('Myriad W01 Bd', sans-serif) normal normal;
  $bold-italic-font: ('Myriad W01 Bd It', sans-serif) normal normal;
  $heading-alpha-font: ('Myriad W01 Bd', sans-serif) normal normal;
  $heading-alpha-font-italic: ('Myriad W01 Bd It', sans-serif) normal normal;
}

$input-typeface: $body-font;

// =========================================================================
// Font size transition to animate font-size changes 
// =========================================================================

@mixin font-size-transition {
  transition: font-size .2s;
}

// =========================================================================
// Headings mixins and definitions 
// =========================================================================

// Lists of configurations for each heading type
// 1. Heading name, class will be ".heading-{name}", eg. "one" = ".heading-one"
// 2. Font-size
// 3. Line-height (optional)
// 4. Font-face (optional)

// Basic sample: ("one", 54px);
// Advanced sample: ("two", 42px, 1.2, $heading-beta-font-face);

// Regular headings
$headings-regular: (
  ("one",   3rem),
  ("two",   2.25rem),
  ("three", 2rem),
  ("four",  1.75rem),
  ("five",  1.5rem),
  ("six",   1.25rem)
);

// Smaller headings, automatically rendered via a media query on top
// of the headings above
$headings-small: (
  ("one",   1.75rem),
  ("two",   1.5rem),
  ("three", 1.375rem),
  ("four",  1.25rem),
  ("five",  1.125rem),
  ("six",   1rem)
);

// Build a responsive heading via the label of the configuration
// @include heading("one");
@mixin heading($heading-label) {
  $heading-setting-index: get-heading-index-for($heading-label);
  @if $heading-setting-index {
    @include heading-for-index($heading-setting-index);
  }
}

// Builds out a responsive heading 
// @include heading-for-index(1);
@mixin heading-for-index($heading-config-index) {
  @if length($headings-regular) >= $heading-config-index {
    $regular-heading: nth($headings-regular, $heading-config-index);
    $regular-heading-length: length($regular-heading);
    @include font-size-transition;

    font-size: nth($regular-heading, 2);
    @if $regular-heading-length > 2 {
      line-height: nth($regular-heading, 3);
    }
    @if $regular-heading-length > 3 {
      @include font(nth($regular-heading, 4));
    } @else {
      @include font($heading-alpha-font);
    }
    
    // Create small heading at breakpoint
    @if length($headings-small) >= $heading-config-index {
      $small-heading: nth($headings-small, $heading-config-index);
      $small-heading-length: length($small-heading);
      
      @media only screen and (max-width: $breakpoint-typography) {
        font-size: nth($small-heading, 2);
        @if $small-heading-length > 2 {
          line-height: nth($small-heading, 3);
        }
        @if $small-heading-length > 3 {
          font-family: nth($small-heading, 4);
        }
      }
    }
  }
}

// Get settings for the heading label
// get-heading-index-for("three") => 3;
// get-heading-index-for("three", true) => ("three", ...)
@function get-heading-index-for($heading-label, $return-setting: false) {
  $result: false;
  @for $index from 1 through length($headings-regular) {
    $heading-setting: nth($headings-regular, $index);
    $heading-list-label: nth($heading-setting, 1);
    @if $heading-list-label == $heading-label {
      @if $return-setting {
        $result: $heading-setting;
      } @else {
        $result: $index;
      }
    }
  }
  @return $result;
}

// Loop over each configuration above and generate our classes
@for $i from 1 through length($headings-regular) {
  $config: nth($headings-regular, $i);
  .heading-#{nth($config, 1)} {
    @include heading-for-index($i);
  }
}

// =========================================================================
// Mixins for premade typography configurations 
// =========================================================================

@mixin body-type {
 @include font($body-font);
 font-size: $base-font-size;
 line-height: $base-line-height;
 color: $foreground-color;
}

@mixin small-type {
  @include font($body-font);
  font-size: $small-font-size;
  line-height: 1;
}

// =========================================================================
// Premade classes for typography 
// =========================================================================

html, 
.body-type {
  @include body-type;
}

body {
  line-height: $base-line-height;
}

small,
.type--small {
  @include small-type;
}

.type--wrap {
  @include text-wrap;
}

.type--ellipsis {
  @include ellipsis;
}

.type--grey {
  @include type-color($grey);
}

.type--passive {
  @include type-color($passive-color);
}

.type--success {
  @include type-color($success-color);
}

.type--error {
  @include type-color($error-color);
}

.type--notice {
  @include type-color($notice-color);
}

.type--alert {
  @include type-color($alert-color);
}

.type--primary {
  @include type-color($primary-color);
}

.type--inverse {
  @include type-color($white);
}

// =========================================================================
// Inline styles
// =========================================================================

strong, b {
  @if $font-families {
    font-weight: bold;
  } @else {
    @include font($bold-font);
  }
}

em, i {
  @if $font-families {
    font-style: italic;
  } @else {
    @include font($italic-font);
  }
}

@if $font-families {
  em b, em strong,
  i b, i strong,
  b i, b em,
  strong i, strong em {
    @include font($bold-italic-font);
  }
}

del {
  text-decoration: line-through;
}

// sub/sup styling
// https://gist.github.com/unruthless/413930
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}

// LINKS

a, button {
  @include decorate-link(none, underline);
  @include color-link($link-color, $link-hover-color);
}

// TABLES

th {
  @if $font-families {
    font-weight: bold;
  } @else {
    @include font($bold-font);
  }
}

// FORMS

[type="text"], [type="password"], [type="date"], [type="datetime"],
[type="email"], [type="number"], [type="search"], [type="tel"], [type="time"],
[type="url"], textarea {
  font-size: $base-font-size;
  line-height: $base-line-height;
  @include font($input-typeface);
}