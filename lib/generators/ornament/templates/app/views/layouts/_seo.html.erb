<%

  # Settings
  cache_version ||= "1"
  koi_settings ||= true
  use_facebook ||= true
  use_twitter ||= true
  use_pwa_settings ||= true
  use_structured_data ||= true

  # Defaults
  site_name ||= Rails.application.class.name.split("::").first.humanize
  meta_title ||= site_name
  meta_title_postfix ||= site_name
  meta_title_postfix_seperator ||= " - "
  meta_keywords ||= false
  meta_description ||= ""
  meta_image ||= false # "#{root_url}assets/share.png?v=#{cache_version}"
  meta_theme_colour ||= "#4b9dd0";

  # Facebook defaults
  facebook_app_id ||= false

  # Twitter defaults
  twitter_site ||= ""
  twitter_creator ||= ""

  # Inner settings
  facebook_crop = "1200x630#"
  twitter_crop = "800x418#"

  # Overrides via Koi Site Settings
  if defined?(Translation) && koi_settings

    # Get site settings
    koi_title = Translation.find_by_key('site.title').try(:value)
    koi_description = Translation.find_by_key('site.meta_description').try(:value)
    koi_keywords = Translation.find_by_key('site.meta_keywords').try(:value)

    # Clean inputs
    site_settings_title = clean_share_input(koi_title) if koi_title
    site_settings_description = clean_share_input(koi_description) if koi_description
    site_settings_keywords = clean_share_input(koi_keywords) if koi_keywords

    # Update values from koi settings
    meta_title = site_settings_title if !koi_title.blank?
    meta_title_postfix = meta_title if !koi_title.blank?
    meta_keywords = site_settings_keywords if !koi_keywords.blank?
    meta_description = site_settings_description if !koi_description.blank?
  end

  # 
  # Standard meta tags
  #
  # These come from:
  # 1. The Koi CRUD seo() helper
  # 2. The meta() view helper
  # 3. Fallback Koi site settings
  # 4. Fallback hardcoded values above
  #

  ### Page title

  # Try from koi setting
  if !seo("title").blank?
    meta_title = seo("title")

  # Try from meta(page_title)
  elsif content_for?(:meta_page_title)
    meta_title = yield(:meta_page_title)

  # Try from meta(title)
  elsif content_for?(:meta_title)
    meta_title = yield(:meta_title)

  # Try from generic :title yield
  elsif content_for?(:title)
    meta_title = yield(:title)
  end

  ### Meta Keywords

  # Try from koi setting
  if !seo("meta_description").blank?
    meta_description = clean_share_input(seo('meta_description'))
  
  # Try from meta(description)
  elsif content_for?(:meta_description) 
    meta_description = yield(:meta_description)
  end

  ### Meta Keywords

  # Try from koi setting
  if !seo("meta_keywords").blank?
    meta_keywords = clean_share_input(seo('meta_keywords'))

  # Try from meta(keywords)
  elsif content_for?(:meta_keywords)
    meta_keywords = yield(:meta_keywords)
  end

  ### Meta Image

  # Try from meta(image)
  meta_image = share_image(yield(:meta_image), facebook_crop) if content_for?(:meta_image)

  ## Theme colour
  meta_theme_colour = yield(:meta_theme_colour) if content_for?(:meta_theme_colour)

  #
  # Facebook meta overrides
  #
  # meta({
  #   facebook: {
  #     title: ""
  #   }
  # })
  #

  # Title
  facebook_title = meta_title
  facebook_title = yield(:meta_facebook_title) if content_for?(:meta_facebook_title)

  # Description
  facebook_description = meta_description
  facebook_description = yield(:meta_facebook_description) if content_for?(:meta_facebook_description)

  # URL
  facebook_url = request.original_url
  facebook_url = yield(:meta_facebook_url) if content_for?(:meta_facebook_url)

  # Image
  facebook_image = meta_image
  facebook_image = share_image(yield(:meta_facebook_image), facebook_crop) if content_for?(:meta_facebook_image)

  # Misc
  facebook_author = yield(:meta_facebook_author) if content_for?(:meta_facebook_author)
  facebook_publish_time = yield(:meta_facebook_publish_time) if content_for?(:meta_facebook_publish_time)

  #
  # Twitter meta overrides
  #
  # meta({
  #   twitter: {
  #     title: ""
  #   }
  # })
  #

  # Title
  twitter_title = meta_title
  twitter_title = yield(:meta_twitter_title) if content_for?(:meta_twitter_title)

  # Description
  twitter_description = meta_description
  twitter_description = yield(:meta_twitter_description) if content_for?(:meta_twitter_description)

  # Image
  twitter_image = meta_image
  twitter_image = share_image(yield(:meta_twitter_image), twitter_crop) if content_for?(:meta_twitter_image)
  twitter_image_alt = false
  twitter_image_alt = yield(:meta_twitter_image_alt) if content_for?(:meta_twitter_image_alt)

  # URL
  twitter_url = request.original_url
  twitter_url = yield(:meta_twitter_url) if content_for?(:meta_twitter_url)

  # Handle / Creator
  # These are usually site-wide set above by the defaults
  # Some cases might come where they may need to be unique
  twitter_site = yield(:meta_twitter_site) if content_for?(:meta_twitter_site)
  twitter_creator = yield(:meta_twitter_creator) if content_for?(:meta_twitter_creator)

  twitter_card_type = "summary"
  twitter_card_type = "summary_large_image" if twitter_image.present?
  twitter_card_type = yield(:meta_twitter_card) if content_for(:meta_twitter_card)
%>

  <title><%= meta_postfixer(meta_title, meta_title_postfix, meta_title_postfix_seperator) %></title>
<% if meta_description.present? %>
  <meta name="description" content="<%= raw meta_description %>" />
<% end %>
<% if meta_keywords %>
  <meta name="keywords" content="<%= raw meta_keywords %>">
<% end %>
<% if meta_image.present? %>
  <link rel="image_src" href="<%= meta_image %>" />
<% end %>

<%# Facebook Output %>
<% if use_facebook %>
  <meta property="og:site_name" content="<%= site_name %>" />
  <meta property="og:title" content="<%= meta_postfixer(facebook_title, meta_title_postfix, meta_title_postfix_seperator) %>" />
  <meta property="og:url" content="<%= facebook_url %>" />
  <meta property="og:type" content="website" />

  <% if facebook_app_id %>
    <meta property="fb:app_id" content="<%= facebook_app_id %>" />
  <% end %>
  
  <% if facebook_description.present? %>
    <meta property="og:description" content="<%= raw facebook_description %>" />
  <% end %>
  <% if facebook_image.present? || content_for(:meta_facebook_disable_image) %>
    <meta property="og:image" content="<%= facebook_image %>" />
  <% end %>
  <% if facebook_author.present? %>
    <meta property="og:author" content="<%= facebook_author %>" />
  <% end %>
  <% if facebook_publish_time.present? %>
    <meta property="og:published_time" content="<%= facebook_publish_time %>" />
  <% end %>
<% end %>

<%# Twitter Output %>
<% if use_twitter %>
  <meta name="twitter:card" content="<%= twitter_card_type %>" />
  <% if twitter_site.present? %>
    <meta name="twitter:site" content="<%= twitter_site %>" />
  <% end %>
  <% if twitter_image.present? %>
    <meta name="twitter:image" content="<%= twitter_image %>" />
  <% end %>
  <% if twitter_image_alt.present? %>
    <meta name="twitter:image:alt" content="<%= twitter_image_alt %>" />
  <% end %>
  <% if twitter_creator.present? %>
    <meta name="twitter:creator" content="<%= twitter_creator %>" />
  <% end %>
  <meta name="twitter:title" content="<%= meta_postfixer(twitter_title, meta_title_postfix, meta_title_postfix_seperator) %>" />
  <meta name="twitter:url" content="<%= twitter_url %>" />
  <meta name="twitter:description" content="<%= raw twitter_description %>" />
<% end %>

<%# Application Icons %>
<% if use_pwa_settings %>
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
  <link rel="manifest" href="<%= webmanifest_path(format: :webmanifest) %>" />
  <link rel="mask-icon" href="/safari-pinned-tab.svg" color="<%= meta_theme_colour %>" />
  <meta name="theme-color" content="<%= meta_theme_colour %>" />
<% end %>

<%# Strucuted Data for enhanced search results %>
<%# Docs - https://developers.google.com/search/docs/guides/enhance-site %>
<%# Testing tool - https://search.google.com/structured-data/testing-tool %>
<% if use_structured_data %>
  <script type="application/ld+json">
  {
    "@context": "http://schema.org",
    <% if content_for?(:structured_data) %>
      <%= yield :structured_data %>
    <% else %>
      "@type": "Organization",
      "url": "<%= root_url %>",
      <% if meta_image %>
      "logo": "<%= meta_image %>"
      <% end %>
    <% end %>
  }
  </script>
<% end %>