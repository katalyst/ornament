<%- content_for :title, "Typography and Spacing" -%>

<div class="content-spacing">

  <p>By default, ornament does not assume anything about content spacing, formatting or styling. It's entirely up to the document author to specify how things should be styled and spaced out. Luckily, this is super easy to do with content and spacing classes.</p>

  <hr />

  <h2 class="heading-two">WYSIWYG content</h2>

  <p>To style a large area of content you simply use the class <code>content</code>. This is usually applied to areas of content generated by a WYSIWYG editor. It will automatically space out and style headings, paragraphs, lists, images and everything else an editor spits out:</p>
</div>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "normal" } do -%>
<div class="content">
  <h1>Heading one</h1>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consectetur fuga vitae numquam accusantium quam quidem ex impedit aperiam modi ab.</p>
  <h2>Heading two</h2>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloremque, eligendi!</p>
  <h3>Heading three</h3>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eius provident voluptas aspernatur at dolor, libero placeat eum beatae illum ducimus.</p>
  <h4>Heading four</h4>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Exercitationem quo aliquam velit voluptas laborum eum quod in qui rerum possimus consequatur fugiat dolor alias eius, reiciendis repellat accusamus optio tenetur aspernatur veritatis perferendis, odio illo! Eveniet dolor earum porro est totam, minus adipisci quos exercitationem! Reprehenderit dolore ipsum repellat inventore.</p>
  <h5>Heading five</h5>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Placeat, alias ullam, nesciunt earum distinctio recusandae odit obcaecati temporibus quasi rem!</p>
  <h6>Heading six</h6>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Architecto cum assumenda minus, minima odio cupiditate, nulla autem qui animi iste, modi aperiam. Officia eius quis, alias ipsam odio aliquid repellat.</p>
  <ul>
    <li>Lorem </li>
    <li>ipsum </li>
    <li>dolor 
      <ul>
        <li>Lorem </li>
        <li>ipsum </li>
        <li>dolor </li>
        <li>sit </li>
        <li>amet</li>
      </ul>
    </li>
    <li>sit </li>
    <li>amet</li>
  </ul>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores repudiandae molestias excepturi non odio maiores beatae tenetur explicabo, blanditiis minus.</p>
  <ol>
    <li>Lorem </li>
    <li>ipsum </li>
    <li>dolor 
      <ul>
        <li>Lorem </li>
        <li>ipsum </li>
        <li>dolor </li>
        <li>sit </li>
        <li>amet</li>
      </ul>
    </li>
    <li>sit </li>
    <li>amet</li>
  </ol>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores repudiandae molestias excepturi non odio maiores beatae tenetur explicabo, blanditiis minus.</p>
</div>
  <%- end -%>

  <hr />

<div class="content-spacing">
  <h2 class="heading-two">Compressed</h2>

  <p>For smaller areas such as tiles or panels we have the <code>compressed</code> class that tightens things up significantly. This class <strong>only</strong> determines spacing and will not style headings or lists. </p>
</div>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "compressed" } do -%>
<div class="compressed">
  <h1>Heading one</h1>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consectetur fuga vitae numquam accusantium quam quidem ex impedit aperiam modi ab.</p>
  <h2>Heading two</h2>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloremque, eligendi!</p>
  <h3>Heading three</h3>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eius provident voluptas aspernatur at dolor, libero placeat eum beatae illum ducimus.</p>
  <h4>Heading four</h4>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Exercitationem quo aliquam velit voluptas laborum eum quod in qui rerum possimus consequatur fugiat dolor alias eius, reiciendis repellat accusamus optio tenetur aspernatur veritatis perferendis, odio illo! Eveniet dolor earum porro est totam, minus adipisci quos exercitationem! Reprehenderit dolore ipsum repellat inventore.</p>
  <h5>Heading five</h5>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Placeat, alias ullam, nesciunt earum distinctio recusandae odit obcaecati temporibus quasi rem!</p>
  <h6>Heading six</h6>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Architecto cum assumenda minus, minima odio cupiditate, nulla autem qui animi iste, modi aperiam. Officia eius quis, alias ipsam odio aliquid repellat.</p>
  <ul>
    <li>Lorem </li>
    <li>ipsum </li>
    <li>dolor 
      <ul>
        <li>Lorem </li>
        <li>ipsum </li>
        <li>dolor </li>
        <li>sit </li>
        <li>amet</li>
      </ul>
    </li>
    <li>sit </li>
    <li>amet</li>
  </ul>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores repudiandae molestias excepturi non odio maiores beatae tenetur explicabo, blanditiis minus.</p>
  <ol>
    <li>Lorem </li>
    <li>ipsum </li>
    <li>dolor 
      <ul>
        <li>Lorem </li>
        <li>ipsum </li>
        <li>dolor </li>
        <li>sit </li>
        <li>amet</li>
      </ul>
    </li>
    <li>sit </li>
    <li>amet</li>
  </ol>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores repudiandae molestias excepturi non odio maiores beatae tenetur explicabo, blanditiis minus.</p>
</div>
  <%- end -%>

  <hr />

<div class="content-spacing">
  <h2 class="heading-two">Headings and content-spacing</h2>

  <p>Not all heading tags should dictate their styling. Sometimes semantically you need a <code>h6</code> that looks like a <code>h2</code>. This can be achieved by using heading classes.</p>
  <p>When customising headings like this we can assume you have control over the HTML that's getting output, so do not use the <code>content</code> class above as it will fight with the heading styles you assign and will turn in to a nightmare to manage. Instead, you can use <code>content-spacing</code> to space out your content, leaving the headings unstyled so you can come in and assign their classes as you see fit. </p>
</div>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "content-spacing" } do -%>
<div class="content-spacing">
  <h1 class="heading-six">Heading one with heading-six class</h1>
  <h2 class="heading-four">Heading two with heading-four class</h2>
  <h6 class="heading-two">Heading six with heading-two class</h6>
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. A, perspiciatis?</p>
</div>
  <%- end -%>

  <hr />

<div class="content-spacing">
  <h2 class="heading-two">Lists</h2>
  <p>If you have a spot where lists need to look like lists, you can do so by adding the <code>content-lists</code> to the wrapper:</p>
</div>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "content-lists" } do -%>
<div class="content-lists">
  <ul>
    <li>Lorem </li>
    <li>ipsum </li>
    <li>dolor 
      <ul>
        <li>Lorem </li>
        <li>ipsum </li>
        <li>dolor </li>
        <li>sit </li>
        <li>amet</li>
      </ul>
    </li>
    <li>sit </li>
    <li>amet</li>
  </ul>
  <ol>
    <li>Lorem </li>
    <li>ipsum </li>
    <li>dolor 
      <ul>
        <li>Lorem </li>
        <li>ipsum </li>
        <li>dolor </li>
        <li>sit </li>
        <li>amet</li>
      </ul>
    </li>
    <li>sit </li>
    <li>amet</li>
  </ol>
</div>
  <%- end -%>

  <p><code>content-lists</code> also supports a few <code>type</code> attributes on lists:</p>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "content-lists" } do -%>
<div class="content-lists">
  <ol type="a">
    <li>Lorem </li>
    <li>ipsum </li>
    <li>dolor</li>
    <li>sit </li>
    <li>amet</li>
  </ol>
  <ol type="aup">
    <li>Lorem </li>
    <li>ipsum </li>
    <li>dolor</li>
    <li>sit </li>
    <li>amet</li>
  </ol>
  <ol type="i">
    <li>Lorem </li>
    <li>ipsum </li>
    <li>dolor</li>
    <li>sit </li>
    <li>amet</li>
  </ol>
  <ol type="iup">
    <li>Lorem </li>
    <li>ipsum </li>
    <li>dolor</li>
    <li>sit </li>
    <li>amet</li>
  </ol>
  <ul type="1">
    <li>Lorem </li>
    <li>ipsum </li>
    <li>dolor</li>
    <li>sit </li>
    <li>amet</li>
  </ul>
</div>
  <%- end -%>

  <hr />

<div class="content-spacing">
  <h2 class="heading-two">Inline typography styles</h2>

  <p>Along with the content classes above, we have some element styling out of the box to make marking up your document easier. Unlike headings, these tags are usually used in specific-enough situations that styling should be assumed:</p>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "content-spacing" } do -%>
Regular text<br />
<small>Small text</small><br />
<del>Deleted text</del><br />
<sup>Superscript</sup><br />
<sub>Subscript</sub><br />
<span class="type--passive">Passive</span><br />
<span class="type--grey">Grey</span>
  <%- end -%>

  <p>If you have a crazy long word that is just breaking <em>everything</em>, you can add <code>.type--wrap</code> on the text to force wrap it:</p>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "content-spacing" } do -%>
<span class="type--wrap">Loremipsumdolorsitamet,consecteturadipisicingelit.Nobisquamdoloremeaquisquamatfugiatnostrumquoquidemestexcepturi.Loremipsumdolorsitamet,consecteturadipisicingelit.Nobisquamdoloremeaquisquamatfugiatnostrumquoquidemestexcepturi.</span>
  <%- end -%>

  <p>Alternatively instead of wrapping it you can truncate it with the <code>.type--ellipsis</code> class.</p>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "content-spacing" } do -%>
<span class="type--ellipsis">Loremipsumdolorsitamet,consecteturadipisicingelit.Nobisquamdoloremeaquisquamatfugiatnostrumquoquidemestexcepturi.Loremipsumdolorsitamet,consecteturadipisicingelit.Nobisquamdoloremeaquisquamatfugiatnostrumquoquidemestexcepturi.</span>
  <%- end -%>

</div>

  <hr />

<div class="content-spacing">
  <h2 class="heading-two">SASS Mixins</h2>
  <p>These content classes have mixins for making life easier on the CSS side. You can find the mixins by exploring the <code>stylesheets/aspects</code> folder.</p>
</div>

  <hr />

<div class="content-spacing">
  <h2 class="heading-two">Block spacing</h2>

  <p>There are several <code>spacing-</code> classes you can use to space out block-level elements. While technically you can do this to text, you should use the content classes above to do so. This should only be used to space out non-typographical block-level elements, such as a series of tables for example.</p>

  <p>The spacing classes range from <code>spacing-xxx-tight</code> for the smallest to <code>spacing-xxx-loose</code> for the largest.</p>

  <p>These classes will space only the direct decendants inside the element with that class, so it's perfect for spacing out sibling elements.</p>

  <h3 class="heading-three">spacing-xxx-tight</h3>
</div>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "spacing-xxx-tight" } do -%>
<div class="spacing-xxx-tight">
  <div class="panel">Block</div>
  <div class="panel">Block</div>
  <div class="panel">Block</div>
</div>
  <%- end -%>

  <h3 class="heading-three">spacing</h3>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "spacing-tight" } do -%>
<div class="spacing">
  <div class="panel">Block</div>
  <div class="panel">Block</div>
  <div class="panel">Block</div>
</div>
  <%- end -%>

  <h3 class="heading-three">spacing-xxx-loose</h3>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "spacing-xxx-loose" } do -%>
<div class="spacing-xxx-loose">
  <div class="panel">Block</div>
  <div class="panel">Block</div>
  <div class="panel">Block</div>
</div>
  <%- end -%>
