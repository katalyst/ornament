
<% content_for :title, "Password Score" %>

<div class="content-spacing">
  <%= simple_form_for :test_form, url: request.path, remote: true do |f| %>

  <p>Requires the <a href="https://github.com/dropbox/zxcvbn">zxcvbn gem</a>, and this line to be added to your <code>core.js</code>:<br />
  <code>//= require zxcvbn-async</code></p>

  <p>Without zxcvbn, it will operate in demo mode as you can see here, which will return a random score on field change.</p>

  <div class="panel__alert panel--padding">
    <p>Be aware if you are using zxcvbn-ruby for server-side validation that the JS and ruby implementations <a href="https://github.com/envato/zxcvbn-ruby/issues/18" target="_blank">have different results</a>.</p>
  </div>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "form-password-score", ruby: capture { -%>
&lt;%= f.input :password_score, wrapper_html: { class: "form--medium", data: { password_score: "" } } %>
  <%- } } do -%>
<%= f.input :password_score, wrapper_html: { class: "form--medium", data: { password_score: "" } } %>
  <%- end -%>

  <p>You can customise the label under the field by using <code>data-password-score-label</code>. Here's an example with a custom label, using one of the form sizing classes and the password revealer for good measure.</p>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "form-password-score-2", ruby: capture { -%>
&lt;%= f.input :password_score_custom, wrapper_html: { class: "form--medium", data: { password_score: "", password_score_label: "<('.' <)" } }, input_html: { data: { password_reveal: "" } } %>
  <%- } } do -%>
<%= f.input :password_score_custom, wrapper_html: { class: "form--medium", data: { password_score: "", password_score_label: "<('.' <)" } }, input_html: { data: { password_reveal: "" } } %>
  <%- end -%>

  <p>Password score comes with a helper to test if zxcbvn is available: <code>Ornament.C.FormPasswordScore.hasZxcvbn</code></p>
  <p>You can rebind password scores if you need to, for example if the form has been ajaxed in, with <code>Ornament.C.FormPasswordScore.init()</code></p>

  <% end %>
</div>
