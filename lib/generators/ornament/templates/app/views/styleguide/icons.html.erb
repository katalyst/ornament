<%- content_for :title, "SVG Icons" -%>

<div class="content-spacing">

  <p>SVG icons are stored in <code>/app/views/shared/icons</code> as <code>_icon_name.svg.erb</code>.

  <h2 class="heading-two">Icon Helper</h2>

  <p>There is a rails helper for using these SVG icons in your project:</p>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "icon-helper", no_html: true, ruby: capture { -%>
&lt;%= icon("search", width: 32, height: 32) -%>
  <%- } } do -%>
    <%= icon("search", width: 32, height: 32) -%>
  <%- end -%>

  <p>You can pass in width and height attributes in to the helper to control the size of the icon:</p>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "icon-helper-size", no_html: true, ruby: capture { -%>
&lt;%= icon("search", width: 16, height: 16) -%>
&lt;%= icon("search", width: 32, height: 32) -%>
&lt;%= icon("search", width: 64, height: 64) -%>
  <%- } } do -%>
    <%= icon("search", width: 16, height: 16) -%>
    <%= icon("search", width: 32, height: 32) -%>
    <%= icon("search", width: 64, height: 64) -%>
  <%- end -%>

  <p>You can control the colouring of the icon using the <code>fill</code> and <code>stroke</code> attributes:</p>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "icon-helper-colour", no_html: true, ruby: capture { -%>
&lt;%= icon("search", width: 32, height: 32, stroke: "#cccccc") -%>
&lt;%= icon("search", width: 32, height: 32, stroke: "red") -%>
&lt;%= icon("search", width: 32, height: 32, stroke: "#ff00bb") -%>
  <%- } } do -%>
    <%= icon("search", width: 32, height: 32, stroke: "#cccccc") -%>
    <%= icon("search", width: 32, height: 32, stroke: "red") -%>
    <%= icon("search", width: 32, height: 32, stroke: "#ff00bb") -%>
  <%- end -%>

  <h2 class="heading-two">Project Icons</h2>

  <p>This project has the following icons:</p>

  <%- 
    icon_path = Rails.root.join("app", "views", "shared", "icons")
    if Rails.application.class.parent_name == "Dummy"
      icon_path = Rails.root.join("..", "..", "lib", "generators", "ornament", "templates", "app", "views", "shared", "icons")
    end
  -%>
  <%- begin -%>
    <div class="icon-grid">
      <%- Dir.foreach(icon_path) do |file| -%>
        <%- 
          next if file == '.' or file == '..' 
          icon_name = file.split(".svg")[0]
          icon_name.slice!(0)
        -%>
        <div class="icon-grid--item">
          <div class="icon-grid--item--background">
            <div class="icon-grid--item--icon">
              <%= icon(icon_name) -%>
            </div>
            <div class="icon-grid--item--icon-name">
              <%= icon_name -%>
            </div>
          </div>
        </div>
      <%- end -%>
    </div>
  <%- rescue Errno::ENOENT -%>
    <div class="icon-grid--item">
      <div class="icon-grid--item--background">
        <div class="icon-grid--item--icon">
          <p>Error finding icon folder</p>
        </div>
      </div>
    </div>
  <%- end -%>

  <%- if defined?(Koi) -%>
    <h2 class="heading-two">Koi Icons</h2>

    <p>If you are using Koi 2.3+, you have access to out-of-the-box Koi icons. You can <a href="/admin/styleguide/icons">log in to the developer area</a> to preview those icons.</p>

    <p>You can use those icons by passing <code>koi: true</code> in to your icon helper:</p>

    <pre>&lt;%= icon_helper("filter", koi: true) -%></pre>
  <%- end -%>

  <hr />

  <h2 class="heading-two">Helper Sass Mixins</h2>

  <h3 class="heading-three">icon-block</h3>

  <p><code>icon-block</code> will let you create a sized element with icon centred inside of it. This is ideal for little square blocks with icons inside them.</p>

  <p>Passing only one value in will size the element and the icon will use it's inline width/height to size itself:</p>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "icon-block-single", scss: capture { -%>
.icon-block-32 {
  @include icon-block(32px);
  background: orange;
}
  <%- } } do -%>
<div class="icon-block-32">
  <%= icon("clock", width: 32, height: 32) -%>
</div>
  <%- end -%>

  <p>Passing two values in will size the element as a square using the first value as the width and height, and size the icon as a square as well using the second value as the width and height:</p>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "icon-block-single", scss: capture { -%>
.icon-block-32-16 {
  @include icon-block(32px, 16px);
  background: orange;
}
  <%- } } do -%>
<div class="icon-block-32-16">
  <%= icon("clock") -%>
</div>
  <%- end -%>

  <p>You can also treat both values as a list of <code>($width, $height)</code>:</p>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "icon-block-single", scss: capture { -%>
.icon-block-lists {
  @include icon-block((64px, 32px), (11px, 16px));
  background: orange;
}
  <%- } } do -%>
<div class="icon-block-lists">
  <%= icon("chevron_right") -%>
</div>
  <%- end -%>


  <h3 class="heading-three">table-icon</h3>

  <p>You can create some text aligned with an icon with the <code>table-icon($icon-size)</code> mixin, like so:</p>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "icon-helper", scss: capture { -%>
.icon-table-32 {
  @include icon-table(32px);
}
  <%- } } do -%>
<div class="icon-table-32">
  <div class="icon-table--icon">
    <%= icon("clock", width: 32, height: 32) -%>
  </div>
  <div class="icon-table--label">
    This text is aligned to the icon
  </div>
</div>
  <%- end -%>

  <p>You can pass in custom guttering with a second parameter:</p>

  <%= render layout: "/layouts/styleguide/styleguide_feature", locals: { id: "icon-helper", scss: capture { -%>
.icon-table-16 {
  @include icon-table(16px, 8px);
}
  <%- } } do -%>
<a href="#" class="icon-table-16">
  <div class="icon-table--icon">
    <%= icon("arrow_left", width: 16, height: 16) -%>
  </div>
  <div class="icon-table--label">
    Go back
  </div>
</a>
  <%- end -%>

</div> 